{"ast":null,"code":"var _jsxFileName = \"/Users/gwynethnicole/Desktop/frsa-web-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://fsra-chatbot-backend.onrender.com\"; // Backend URL\n\nfunction App() {\n  _s();\n  // User Authentication States\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  // Chatbot States\n  const [query, setQuery] = useState(\"\");\n  const [chatResponse, setChatResponse] = useState(\"\");\n\n  // Simulated User Data (Replace this with actual API authentication logic)\n  useEffect(() => {\n    // Simulating an API fetching user details after login\n    const fakeUser = {\n      name: \"Gwyneth Gonzales\",\n      // Replace with dynamic data if available\n      role: \"FSRA Agent\" // Replace with actual user role\n    };\n    setUser(fakeUser);\n  }, []);\n\n  // Function to handle user login\n  const handleLogin = () => {\n    if (email && password) {\n      // Simulating a login, replace with real auth API call if needed\n      setUser({\n        name: \"Gwyneth Gonzales\",\n        role: \"FSRA Agent\"\n      });\n    }\n  };\n\n  // Function to handle chatbot query\n  const handleChatbotQuery = async () => {\n    if (!query.trim()) return;\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: query\n        })\n      });\n      const data = await response.json();\n      setChatResponse(data.reply);\n    } catch (error) {\n      console.error(\"AI Chatbot Error:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loginContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        style: buttonStyle,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: headerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Insura\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Welcome, \", user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }, this), \" \", user.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setUser(null),\n          style: buttonStyle,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: chatbotContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI Chatbot (FSRA Policy Assistant)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Ask a policy-related question...\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          style: textareaStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChatbotQuery,\n          style: buttonStyle,\n          children: \"Ask AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), chatResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"AI Response:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), \" \", chatResponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n/** âœ… STYLING **/\n_s(App, \"ldOCsKd1CqVmi0aw3BKRxm7bAzs=\");\n_c = App;\nconst containerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100vh\",\n  backgroundColor: \"#f8f9fa\",\n  fontFamily: \"Arial, sans-serif\"\n};\nconst loginContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"10px\",\n  backgroundColor: \"#ffffff\",\n  padding: \"20px\",\n  borderRadius: \"8px\",\n  boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\"\n};\nconst headerStyle = {\n  textAlign: \"center\",\n  marginBottom: \"20px\"\n};\nconst chatbotContainerStyle = {\n  width: \"50%\",\n  backgroundColor: \"#ffffff\",\n  padding: \"20px\",\n  borderRadius: \"8px\",\n  boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\",\n  textAlign: \"center\"\n};\nconst inputStyle = {\n  padding: \"10px\",\n  width: \"250px\",\n  marginBottom: \"10px\",\n  borderRadius: \"5px\",\n  border: \"1px solid #ccc\"\n};\nconst textareaStyle = {\n  width: \"100%\",\n  height: \"80px\",\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  border: \"1px solid #ccc\",\n  marginBottom: \"10px\"\n};\nconst buttonStyle = {\n  padding: \"10px 15px\",\n  backgroundColor: \"#007bff\",\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\"\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","App","_s","email","setEmail","password","setPassword","user","setUser","query","setQuery","chatResponse","setChatResponse","fakeUser","name","role","handleLogin","handleChatbotQuery","trim","response","fetch","method","headers","body","JSON","stringify","message","data","json","reply","error","console","style","containerStyle","children","loginContainerStyle","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","inputStyle","onClick","buttonStyle","headerStyle","chatbotContainerStyle","textareaStyle","_c","display","flexDirection","alignItems","justifyContent","height","backgroundColor","fontFamily","gap","padding","borderRadius","boxShadow","textAlign","marginBottom","width","border","color","cursor","$RefreshReg$"],"sources":["/Users/gwynethnicole/Desktop/frsa-web-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst API_URL = \"https://fsra-chatbot-backend.onrender.com\"; // Backend URL\n\nfunction App() {\n  // User Authentication States\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  // Chatbot States\n  const [query, setQuery] = useState(\"\");\n  const [chatResponse, setChatResponse] = useState(\"\");\n\n  // Simulated User Data (Replace this with actual API authentication logic)\n  useEffect(() => {\n    // Simulating an API fetching user details after login\n    const fakeUser = {\n      name: \"Gwyneth Gonzales\", // Replace with dynamic data if available\n      role: \"FSRA Agent\" // Replace with actual user role\n    };\n    setUser(fakeUser);\n  }, []);\n\n  // Function to handle user login\n  const handleLogin = () => {\n    if (email && password) {\n      // Simulating a login, replace with real auth API call if needed\n      setUser({ name: \"Gwyneth Gonzales\", role: \"FSRA Agent\" });\n    }\n  };\n\n  // Function to handle chatbot query\n  const handleChatbotQuery = async () => {\n    if (!query.trim()) return;\n\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: query })\n      });\n      const data = await response.json();\n      setChatResponse(data.reply);\n    } catch (error) {\n      console.error(\"AI Chatbot Error:\", error.message);\n    }\n  };\n\n  return (\n    <div style={containerStyle}>\n      {/* âœ… LOGIN SECTION */}\n      {!user ? (\n        <div style={loginContainerStyle}>\n          <h2>Login</h2>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            style={inputStyle}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            style={inputStyle}\n          />\n          <button onClick={handleLogin} style={buttonStyle}>Login</button>\n        </div>\n      ) : (\n        <>\n          {/* âœ… USER INFO SECTION */}\n          <div style={headerStyle}>\n            <h1>Insura</h1>\n            <p><strong>Welcome, {user.name}</strong></p>\n            <p><strong>Role:</strong> {user.role}</p>\n            <button onClick={() => setUser(null)} style={buttonStyle}>Logout</button>\n          </div>\n\n          {/* âœ… CHATBOT SECTION */}\n          <div style={chatbotContainerStyle}>\n            <h3>AI Chatbot (FSRA Policy Assistant)</h3>\n            <textarea\n              placeholder=\"Ask a policy-related question...\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              style={textareaStyle}\n            />\n            <button onClick={handleChatbotQuery} style={buttonStyle}>Ask AI</button>\n            {chatResponse && <p><strong>AI Response:</strong> {chatResponse}</p>}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\n/** âœ… STYLING **/\nconst containerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100vh\",\n  backgroundColor: \"#f8f9fa\",\n  fontFamily: \"Arial, sans-serif\"\n};\n\nconst loginContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"10px\",\n  backgroundColor: \"#ffffff\",\n  padding: \"20px\",\n  borderRadius: \"8px\",\n  boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\"\n};\n\nconst headerStyle = {\n  textAlign: \"center\",\n  marginBottom: \"20px\"\n};\n\nconst chatbotContainerStyle = {\n  width: \"50%\",\n  backgroundColor: \"#ffffff\",\n  padding: \"20px\",\n  borderRadius: \"8px\",\n  boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\",\n  textAlign: \"center\"\n};\n\nconst inputStyle = {\n  padding: \"10px\",\n  width: \"250px\",\n  marginBottom: \"10px\",\n  borderRadius: \"5px\",\n  border: \"1px solid #ccc\"\n};\n\nconst textareaStyle = {\n  width: \"100%\",\n  height: \"80px\",\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  border: \"1px solid #ccc\",\n  marginBottom: \"10px\"\n};\n\nconst buttonStyle = {\n  padding: \"10px 15px\",\n  backgroundColor: \"#007bff\",\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\"\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}