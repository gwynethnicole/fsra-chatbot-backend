{"ast":null,"code":"var _jsxFileName = \"/Users/gwynethnicole/Desktop/frsa-web-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://fsra-chatbot-backend.onrender.com\"; // Backend URL\n\nfunction App() {\n  _s();\n  // User Authentication States\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [pendingRequests, setPendingRequests] = useState([]); // Stores pending requests\n\n  // Chatbot States\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]); // Stores chat history per user\n\n  // ✅ Load user and chat history from localStorage\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"user\");\n    if (savedUser) {\n      const userData = JSON.parse(savedUser);\n      setUser(userData);\n\n      // Retrieve chat history for the logged-in user\n      const savedChat = localStorage.getItem(`chatHistory_${userData.name}`);\n      if (savedChat) {\n        setChatHistory(JSON.parse(savedChat));\n      }\n\n      // ✅ Fetch pending requests if user is an FSRA role\n      fetchPendingRequests(userData.role);\n    }\n  }, []);\n\n  // ✅ Function to fetch pending requests (if FSRA role)\n  const fetchPendingRequests = async role => {\n    if (role.includes(\"FSRA\")) {\n      try {\n        const response = await fetch(`${API_URL}/pending-requests`);\n        const data = await response.json();\n        setPendingRequests(data.requests || []);\n      } catch (error) {\n        console.error(\"Error fetching pending requests:\", error.message);\n      }\n    }\n  };\n\n  // ✅ Function to handle user login\n  const handleLogin = async () => {\n    if (email && password) {\n      try {\n        const response = await fetch(`${API_URL}/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          setUser(data.user);\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\n\n          // Fetch pending requests if applicable\n          fetchPendingRequests(data.user.role);\n\n          // Load chat history for the logged-in user\n          const savedChat = localStorage.getItem(`chatHistory_${data.user.name}`);\n          setChatHistory(savedChat ? JSON.parse(savedChat) : []);\n        } else {\n          alert(\"Invalid credentials. Please try again.\");\n        }\n      } catch (error) {\n        console.error(\"Login error:\", error.message);\n      }\n    }\n  };\n\n  // ✅ Function to handle chatbot query\n  const handleChatbotQuery = async () => {\n    if (!query.trim()) return;\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: query\n        })\n      });\n      const data = await response.json();\n      const newChat = [...chatHistory, {\n        user: \"You\",\n        message: query\n      }, {\n        user: \"AI\",\n        message: data.reply\n      }];\n      setChatHistory(newChat);\n\n      // Store chat history specific to the logged-in user\n      if (user !== null && user !== void 0 && user.name) {\n        localStorage.setItem(`chatHistory_${user.name}`, JSON.stringify(newChat));\n      }\n    } catch (error) {\n      console.error(\"AI Chatbot Error:\", error.message);\n    }\n  };\n\n  // ✅ Function to handle user logout\n  const handleLogout = () => {\n    if (user !== null && user !== void 0 && user.name) {\n      localStorage.removeItem(`chatHistory_${user.name}`); // Clear chat for this user\n    }\n    localStorage.removeItem(\"user\"); // Remove user session\n    setUser(null);\n    setChatHistory([]); // Clear chat UI\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loginContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        style: buttonStyle,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: headerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Insura\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Welcome, \", user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 16\n          }, this), \" \", user.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          style: buttonStyle,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), user.role.includes(\"FSRA\") && pendingRequests.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: pendingRequestsStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pending Requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: pendingRequests.map((request, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: request\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: chatbotContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI Chatbot (FSRA Policy Assistant)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Ask a policy-related question...\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          style: textareaStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChatbotQuery,\n          style: buttonStyle,\n          children: \"Ask AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: chatHistoryStyle,\n          children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [chat.user, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 32\n            }, this), \" \", chat.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n/** ✅ STYLING **/\n_s(App, \"tUDpP2uhWMT4mXo0XFooU6yxnAI=\");\n_c = App;\nconst containerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100vh\",\n  backgroundColor: \"#f8f9fa\",\n  fontFamily: \"Arial, sans-serif\"\n};\nconst loginContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"10px\",\n  backgroundColor: \"#ffffff\",\n  padding: \"20px\",\n  borderRadius: \"8px\",\n  boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\"\n};\nconst headerStyle = {\n  textAlign: \"center\",\n  marginBottom: \"20px\"\n};\nconst chatbotContainerStyle = {\n  width: \"50%\",\n  backgroundColor: \"#ffffff\",\n  padding: \"20px\",\n  borderRadius: \"8px\",\n  boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\",\n  textAlign: \"center\"\n};\nconst pendingRequestsStyle = {\n  backgroundColor: \"#ffebcc\",\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  marginBottom: \"20px\",\n  textAlign: \"center\",\n  boxShadow: \"0px 2px 4px rgba(0,0,0,0.1)\"\n};\nconst chatHistoryStyle = {\n  textAlign: \"left\",\n  maxHeight: \"200px\",\n  overflowY: \"auto\",\n  padding: \"10px\",\n  border: \"1px solid #ccc\",\n  borderRadius: \"5px\",\n  marginTop: \"10px\"\n};\nconst inputStyle = {\n  padding: \"10px\",\n  width: \"250px\",\n  marginBottom: \"10px\",\n  borderRadius: \"5px\",\n  border: \"1px solid #ccc\"\n};\nconst textareaStyle = {\n  width: \"100%\",\n  height: \"80px\",\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  border: \"1px solid #ccc\",\n  marginBottom: \"10px\"\n};\nconst buttonStyle = {\n  padding: \"10px 15px\",\n  backgroundColor: \"#007bff\",\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\"\n};\nconst handleLogin = async () => {\n  if (!email || !password) {\n    console.error(\"Email and password required\");\n    return;\n  }\n  try {\n    const response = await fetch(`${API_URL}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Login failed: ${response.statusText}`);\n    }\n    const data = await response.json();\n    setUser(data);\n    localStorage.setItem(\"user\", JSON.stringify(data)); // Store user session\n  } catch (error) {\n    console.error(\"Login error:\", error.message);\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","App","_s","email","setEmail","password","setPassword","user","setUser","pendingRequests","setPendingRequests","query","setQuery","chatHistory","setChatHistory","savedUser","localStorage","getItem","userData","JSON","parse","savedChat","name","fetchPendingRequests","role","includes","response","fetch","data","json","requests","error","console","message","handleLogin","method","headers","body","stringify","success","setItem","alert","handleChatbotQuery","trim","newChat","reply","handleLogout","removeItem","style","containerStyle","children","loginContainerStyle","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","inputStyle","onClick","buttonStyle","headerStyle","length","pendingRequestsStyle","map","request","index","chatbotContainerStyle","textareaStyle","chatHistoryStyle","chat","_c","display","flexDirection","alignItems","justifyContent","height","backgroundColor","fontFamily","gap","padding","borderRadius","boxShadow","textAlign","marginBottom","width","maxHeight","overflowY","border","marginTop","color","cursor","ok","Error","statusText","$RefreshReg$"],"sources":["/Users/gwynethnicole/Desktop/frsa-web-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst API_URL = \"https://fsra-chatbot-backend.onrender.com\"; // Backend URL\n\nfunction App() {\n  // User Authentication States\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [pendingRequests, setPendingRequests] = useState([]); // Stores pending requests\n\n  // Chatbot States\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]); // Stores chat history per user\n\n  // ✅ Load user and chat history from localStorage\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"user\");\n    if (savedUser) {\n      const userData = JSON.parse(savedUser);\n      setUser(userData);\n\n      // Retrieve chat history for the logged-in user\n      const savedChat = localStorage.getItem(`chatHistory_${userData.name}`);\n      if (savedChat) {\n        setChatHistory(JSON.parse(savedChat));\n      }\n\n      // ✅ Fetch pending requests if user is an FSRA role\n      fetchPendingRequests(userData.role);\n    }\n  }, []);\n\n  // ✅ Function to fetch pending requests (if FSRA role)\n  const fetchPendingRequests = async (role) => {\n    if (role.includes(\"FSRA\")) {\n      try {\n        const response = await fetch(`${API_URL}/pending-requests`);\n        const data = await response.json();\n        setPendingRequests(data.requests || []);\n      } catch (error) {\n        console.error(\"Error fetching pending requests:\", error.message);\n      }\n    }\n  };\n\n  // ✅ Function to handle user login\n  const handleLogin = async () => {\n    if (email && password) {\n      try {\n        const response = await fetch(`${API_URL}/login`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ email, password }),\n        });\n        const data = await response.json();\n\n        if (data.success) {\n          setUser(data.user);\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\n\n          // Fetch pending requests if applicable\n          fetchPendingRequests(data.user.role);\n\n          // Load chat history for the logged-in user\n          const savedChat = localStorage.getItem(`chatHistory_${data.user.name}`);\n          setChatHistory(savedChat ? JSON.parse(savedChat) : []);\n        } else {\n          alert(\"Invalid credentials. Please try again.\");\n        }\n      } catch (error) {\n        console.error(\"Login error:\", error.message);\n      }\n    }\n  };\n\n  // ✅ Function to handle chatbot query\n  const handleChatbotQuery = async () => {\n    if (!query.trim()) return;\n\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: query }),\n      });\n      const data = await response.json();\n\n      const newChat = [\n        ...chatHistory,\n        { user: \"You\", message: query },\n        { user: \"AI\", message: data.reply },\n      ];\n\n      setChatHistory(newChat);\n\n      // Store chat history specific to the logged-in user\n      if (user?.name) {\n        localStorage.setItem(`chatHistory_${user.name}`, JSON.stringify(newChat));\n      }\n    } catch (error) {\n      console.error(\"AI Chatbot Error:\", error.message);\n    }\n  };\n\n  // ✅ Function to handle user logout\n  const handleLogout = () => {\n    if (user?.name) {\n      localStorage.removeItem(`chatHistory_${user.name}`); // Clear chat for this user\n    }\n    localStorage.removeItem(\"user\"); // Remove user session\n    setUser(null);\n    setChatHistory([]); // Clear chat UI\n  };\n\n  return (\n    <div style={containerStyle}>\n      {/* ✅ LOGIN SECTION */}\n      {!user ? (\n        <div style={loginContainerStyle}>\n          <h2>Login</h2>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            style={inputStyle}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            style={inputStyle}\n          />\n          <button onClick={handleLogin} style={buttonStyle}>Login</button>\n        </div>\n      ) : (\n        <>\n          {/* ✅ USER INFO SECTION */}\n          <div style={headerStyle}>\n            <h1>Insura</h1>\n            <p><strong>Welcome, {user.name}</strong></p>\n            <p><strong>Role:</strong> {user.role}</p>\n            <button onClick={handleLogout} style={buttonStyle}>Logout</button>\n          </div>\n\n          {/* ✅ PENDING REQUESTS SECTION */}\n          {user.role.includes(\"FSRA\") && pendingRequests.length > 0 && (\n            <div style={pendingRequestsStyle}>\n              <h3>Pending Requests</h3>\n              <ul>\n                {pendingRequests.map((request, index) => (\n                  <li key={index}>{request}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* ✅ CHATBOT SECTION */}\n          <div style={chatbotContainerStyle}>\n            <h3>AI Chatbot (FSRA Policy Assistant)</h3>\n            <textarea\n              placeholder=\"Ask a policy-related question...\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              style={textareaStyle}\n            />\n            <button onClick={handleChatbotQuery} style={buttonStyle}>Ask AI</button>\n            <div style={chatHistoryStyle}>\n              {chatHistory.map((chat, index) => (\n                <p key={index}><strong>{chat.user}:</strong> {chat.message}</p>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\n/** ✅ STYLING **/\nconst containerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100vh\",\n  backgroundColor: \"#f8f9fa\",\n  fontFamily: \"Arial, sans-serif\"\n};\n\nconst loginContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"10px\",\n  backgroundColor: \"#ffffff\",\n  padding: \"20px\",\n  borderRadius: \"8px\",\n  boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\"\n};\n\nconst headerStyle = {\n  textAlign: \"center\",\n  marginBottom: \"20px\"\n};\n\nconst chatbotContainerStyle = {\n  width: \"50%\",\n  backgroundColor: \"#ffffff\",\n  padding: \"20px\",\n  borderRadius: \"8px\",\n  boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\",\n  textAlign: \"center\"\n};\n\nconst pendingRequestsStyle = {\n  backgroundColor: \"#ffebcc\",\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  marginBottom: \"20px\",\n  textAlign: \"center\",\n  boxShadow: \"0px 2px 4px rgba(0,0,0,0.1)\"\n};\n\nconst chatHistoryStyle = {\n  textAlign: \"left\",\n  maxHeight: \"200px\",\n  overflowY: \"auto\",\n  padding: \"10px\",\n  border: \"1px solid #ccc\",\n  borderRadius: \"5px\",\n  marginTop: \"10px\"\n};\n\nconst inputStyle = {\n  padding: \"10px\",\n  width: \"250px\",\n  marginBottom: \"10px\",\n  borderRadius: \"5px\",\n  border: \"1px solid #ccc\"\n};\n\nconst textareaStyle = {\n  width: \"100%\",\n  height: \"80px\",\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  border: \"1px solid #ccc\",\n  marginBottom: \"10px\"\n};\n\nconst buttonStyle = {\n  padding: \"10px 15px\",\n  backgroundColor: \"#007bff\",\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\"\n};\n\nconst handleLogin = async () => {\n  if (!email || !password) {\n    console.error(\"Email and password required\");\n    return;\n  }\n\n  try {\n    const response = await fetch(`${API_URL}/login`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email, password })\n    });\n\n    if (!response.ok) {\n      throw new Error(`Login failed: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    setUser(data);\n    localStorage.setItem(\"user\", JSON.stringify(data)); // Store user session\n\n  } catch (error) {\n    console.error(\"Login error:\", error.message);\n  }\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,OAAO,GAAG,2CAA2C,CAAC,CAAC;;AAE7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACb,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;MACtCP,OAAO,CAACU,QAAQ,CAAC;;MAEjB;MACA,MAAMG,SAAS,GAAGL,YAAY,CAACC,OAAO,CAAC,eAAeC,QAAQ,CAACI,IAAI,EAAE,CAAC;MACtE,IAAID,SAAS,EAAE;QACbP,cAAc,CAACK,IAAI,CAACC,KAAK,CAACC,SAAS,CAAC,CAAC;MACvC;;MAEA;MACAE,oBAAoB,CAACL,QAAQ,CAACM,IAAI,CAAC;IACrC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMD,oBAAoB,GAAG,MAAOC,IAAI,IAAK;IAC3C,IAAIA,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG3B,OAAO,mBAAmB,CAAC;QAC3D,MAAM4B,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCnB,kBAAkB,CAACkB,IAAI,CAACE,QAAQ,IAAI,EAAE,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACE,OAAO,CAAC;MAClE;IACF;EACF,CAAC;;EAED;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI/B,KAAK,IAAIE,QAAQ,EAAE;MACrB,IAAI;QACF,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG3B,OAAO,QAAQ,EAAE;UAC/CmC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAElB,IAAI,CAACmB,SAAS,CAAC;YAAEnC,KAAK;YAAEE;UAAS,CAAC;QAC1C,CAAC,CAAC;QACF,MAAMuB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAACW,OAAO,EAAE;UAChB/B,OAAO,CAACoB,IAAI,CAACrB,IAAI,CAAC;UAClBS,YAAY,CAACwB,OAAO,CAAC,MAAM,EAAErB,IAAI,CAACmB,SAAS,CAACV,IAAI,CAACrB,IAAI,CAAC,CAAC;;UAEvD;UACAgB,oBAAoB,CAACK,IAAI,CAACrB,IAAI,CAACiB,IAAI,CAAC;;UAEpC;UACA,MAAMH,SAAS,GAAGL,YAAY,CAACC,OAAO,CAAC,eAAeW,IAAI,CAACrB,IAAI,CAACe,IAAI,EAAE,CAAC;UACvER,cAAc,CAACO,SAAS,GAAGF,IAAI,CAACC,KAAK,CAACC,SAAS,CAAC,GAAG,EAAE,CAAC;QACxD,CAAC,MAAM;UACLoB,KAAK,CAAC,wCAAwC,CAAC;QACjD;MACF,CAAC,CAAC,OAAOV,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC9C;IACF;EACF,CAAC;;EAED;EACA,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAAC/B,KAAK,CAACgC,IAAI,CAAC,CAAC,EAAE;IAEnB,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG3B,OAAO,OAAO,EAAE;QAC9CmC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAElB,IAAI,CAACmB,SAAS,CAAC;UAAEL,OAAO,EAAEtB;QAAM,CAAC;MACzC,CAAC,CAAC;MACF,MAAMiB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,MAAMe,OAAO,GAAG,CACd,GAAG/B,WAAW,EACd;QAAEN,IAAI,EAAE,KAAK;QAAE0B,OAAO,EAAEtB;MAAM,CAAC,EAC/B;QAAEJ,IAAI,EAAE,IAAI;QAAE0B,OAAO,EAAEL,IAAI,CAACiB;MAAM,CAAC,CACpC;MAED/B,cAAc,CAAC8B,OAAO,CAAC;;MAEvB;MACA,IAAIrC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEe,IAAI,EAAE;QACdN,YAAY,CAACwB,OAAO,CAAC,eAAejC,IAAI,CAACe,IAAI,EAAE,EAAEH,IAAI,CAACmB,SAAS,CAACM,OAAO,CAAC,CAAC;MAC3E;IACF,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIvC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEe,IAAI,EAAE;MACdN,YAAY,CAAC+B,UAAU,CAAC,eAAexC,IAAI,CAACe,IAAI,EAAE,CAAC,CAAC,CAAC;IACvD;IACAN,YAAY,CAAC+B,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACjCvC,OAAO,CAAC,IAAI,CAAC;IACbM,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEjB,OAAA;IAAKmD,KAAK,EAAEC,cAAe;IAAAC,QAAA,EAExB,CAAC3C,IAAI,gBACJV,OAAA;MAAKmD,KAAK,EAAEG,mBAAoB;MAAAD,QAAA,gBAC9BrD,OAAA;QAAAqD,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd1D,OAAA;QACE2D,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEvD,KAAM;QACbwD,QAAQ,EAAGC,CAAC,IAAKxD,QAAQ,CAACwD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CV,KAAK,EAAEc;MAAW;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACF1D,OAAA;QACE2D,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAErD,QAAS;QAChBsD,QAAQ,EAAGC,CAAC,IAAKtD,WAAW,CAACsD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CV,KAAK,EAAEc;MAAW;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACF1D,OAAA;QAAQkE,OAAO,EAAE7B,WAAY;QAACc,KAAK,EAAEgB,WAAY;QAAAd,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,gBAEN1D,OAAA,CAAAE,SAAA;MAAAmD,QAAA,gBAEErD,OAAA;QAAKmD,KAAK,EAAEiB,WAAY;QAAAf,QAAA,gBACtBrD,OAAA;UAAAqD,QAAA,EAAI;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACf1D,OAAA;UAAAqD,QAAA,eAAGrD,OAAA;YAAAqD,QAAA,GAAQ,WAAS,EAAC3C,IAAI,CAACe,IAAI;UAAA;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC5C1D,OAAA;UAAAqD,QAAA,gBAAGrD,OAAA;YAAAqD,QAAA,EAAQ;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAChD,IAAI,CAACiB,IAAI;QAAA;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzC1D,OAAA;UAAQkE,OAAO,EAAEjB,YAAa;UAACE,KAAK,EAAEgB,WAAY;UAAAd,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,EAGLhD,IAAI,CAACiB,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,IAAIhB,eAAe,CAACyD,MAAM,GAAG,CAAC,iBACvDrE,OAAA;QAAKmD,KAAK,EAAEmB,oBAAqB;QAAAjB,QAAA,gBAC/BrD,OAAA;UAAAqD,QAAA,EAAI;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB1D,OAAA;UAAAqD,QAAA,EACGzC,eAAe,CAAC2D,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAClCzE,OAAA;YAAAqD,QAAA,EAAiBmB;UAAO,GAAfC,KAAK;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAC9B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACN,eAGD1D,OAAA;QAAKmD,KAAK,EAAEuB,qBAAsB;QAAArB,QAAA,gBAChCrD,OAAA;UAAAqD,QAAA,EAAI;QAAkC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3C1D,OAAA;UACE4D,WAAW,EAAC,kCAAkC;UAC9CC,KAAK,EAAE/C,KAAM;UACbgD,QAAQ,EAAGC,CAAC,IAAKhD,QAAQ,CAACgD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CV,KAAK,EAAEwB;QAAc;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACF1D,OAAA;UAAQkE,OAAO,EAAErB,kBAAmB;UAACM,KAAK,EAAEgB,WAAY;UAAAd,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxE1D,OAAA;UAAKmD,KAAK,EAAEyB,gBAAiB;UAAAvB,QAAA,EAC1BrC,WAAW,CAACuD,GAAG,CAAC,CAACM,IAAI,EAAEJ,KAAK,kBAC3BzE,OAAA;YAAAqD,QAAA,gBAAerD,OAAA;cAAAqD,QAAA,GAASwB,IAAI,CAACnE,IAAI,EAAC,GAAC;YAAA;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACmB,IAAI,CAACzC,OAAO;UAAA,GAAlDqC,KAAK;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiD,CAC/D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACN;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;;AAEA;AAAArD,EAAA,CAjLSD,GAAG;AAAA0E,EAAA,GAAH1E,GAAG;AAkLZ,MAAMgD,cAAc,GAAG;EACrB2B,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBC,UAAU,EAAE,QAAQ;EACpBC,cAAc,EAAE,QAAQ;EACxBC,MAAM,EAAE,OAAO;EACfC,eAAe,EAAE,SAAS;EAC1BC,UAAU,EAAE;AACd,CAAC;AAED,MAAM/B,mBAAmB,GAAG;EAC1ByB,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBM,GAAG,EAAE,MAAM;EACXF,eAAe,EAAE,SAAS;EAC1BG,OAAO,EAAE,MAAM;EACfC,YAAY,EAAE,KAAK;EACnBC,SAAS,EAAE;AACb,CAAC;AAED,MAAMrB,WAAW,GAAG;EAClBsB,SAAS,EAAE,QAAQ;EACnBC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMjB,qBAAqB,GAAG;EAC5BkB,KAAK,EAAE,KAAK;EACZR,eAAe,EAAE,SAAS;EAC1BG,OAAO,EAAE,MAAM;EACfC,YAAY,EAAE,KAAK;EACnBC,SAAS,EAAE,6BAA6B;EACxCC,SAAS,EAAE;AACb,CAAC;AAED,MAAMpB,oBAAoB,GAAG;EAC3Bc,eAAe,EAAE,SAAS;EAC1BG,OAAO,EAAE,MAAM;EACfC,YAAY,EAAE,KAAK;EACnBG,YAAY,EAAE,MAAM;EACpBD,SAAS,EAAE,QAAQ;EACnBD,SAAS,EAAE;AACb,CAAC;AAED,MAAMb,gBAAgB,GAAG;EACvBc,SAAS,EAAE,MAAM;EACjBG,SAAS,EAAE,OAAO;EAClBC,SAAS,EAAE,MAAM;EACjBP,OAAO,EAAE,MAAM;EACfQ,MAAM,EAAE,gBAAgB;EACxBP,YAAY,EAAE,KAAK;EACnBQ,SAAS,EAAE;AACb,CAAC;AAED,MAAM/B,UAAU,GAAG;EACjBsB,OAAO,EAAE,MAAM;EACfK,KAAK,EAAE,OAAO;EACdD,YAAY,EAAE,MAAM;EACpBH,YAAY,EAAE,KAAK;EACnBO,MAAM,EAAE;AACV,CAAC;AAED,MAAMpB,aAAa,GAAG;EACpBiB,KAAK,EAAE,MAAM;EACbT,MAAM,EAAE,MAAM;EACdI,OAAO,EAAE,MAAM;EACfC,YAAY,EAAE,KAAK;EACnBO,MAAM,EAAE,gBAAgB;EACxBJ,YAAY,EAAE;AAChB,CAAC;AAED,MAAMxB,WAAW,GAAG;EAClBoB,OAAO,EAAE,WAAW;EACpBH,eAAe,EAAE,SAAS;EAC1Ba,KAAK,EAAE,MAAM;EACbF,MAAM,EAAE,MAAM;EACdP,YAAY,EAAE,KAAK;EACnBU,MAAM,EAAE;AACV,CAAC;AAED,MAAM7D,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI,CAAC/B,KAAK,IAAI,CAACE,QAAQ,EAAE;IACvB2B,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAC5C;EACF;EAEA,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG3B,OAAO,QAAQ,EAAE;MAC/CmC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAElB,IAAI,CAACmB,SAAS,CAAC;QAAEnC,KAAK;QAAEE;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACqB,QAAQ,CAACsE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiBvE,QAAQ,CAACwE,UAAU,EAAE,CAAC;IACzD;IAEA,MAAMtE,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCrB,OAAO,CAACoB,IAAI,CAAC;IACbZ,YAAY,CAACwB,OAAO,CAAC,MAAM,EAAErB,IAAI,CAACmB,SAAS,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC;EAEtD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACE,OAAO,CAAC;EAC9C;AACF,CAAC;AAED,eAAehC,GAAG;AAAC,IAAA0E,EAAA;AAAAwB,YAAA,CAAAxB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}